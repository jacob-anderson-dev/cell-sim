GRID:
    cells = 2 dimensional array of all entities in grid
    createEntity(location)
    createFood(location)
    createCell(location)
    step()
        for (cell in cells) {
            cell.step()
        }
    play()
        running = true
        while (running) {
            step()
            if (quit) {
                running = false
            }
        }

ENTITY:
    xPosition = 0
    yPosition = 0
    currentLocation = vector(xPosition, yPosition)

FOOD is ENTITY:
    foodEnergyAmount = 1;

CELL is ENTITY:
    cellEnergy = 1
    cellSplitEnergy = 2
    shareEnergyMultiplier = .25
    shareEnergyAmount = 1
    foodValue = 2

    cellSticky = true
    canLeave = true
    willMove = false
    gotEnergy = false

    cell cellArray[] getConnectedCells()
    giveEnergy(cell, energyMultiplier, energyAmount)
    destroy()
        grid.createFood(self.currentLocation)
        grid.createFood(self.currentLocation + 1)
        grid.createFood(self.currentLocation - 1)
        grid.createFood(self.currentLocation + 2)
        grid.createFood(self.currentLocation - 2)
    split()
    move()

    if self.cellEnergy == 0:
        self.destroy()

    if self.cellEnergy == self.cellSplitEnergy:
        self.split()

    if self.cellSticky
        for (cell in self.getConnectedCells()) {
            if (self.gotEnergy) {
                self.giveEnergy(cell, shareEnergyMultiplier, shareEnergyAmount)
            }
            cell.canLeave = false
        }

    if not self.canLeave && self.willMove:
        for (cell in self.getConnectedCells()) {
            cell.move()
        }

    if self.canLeave && self.willMove:
        self.move()

    EATER is CELL:
        if self.touching(self, food):
            eat(food)
                self.giveEnergy(self, 1, food.foodEnergyAmount)
                destroy(food)

    MAKER is CELL:
        step()
            createFood()

    MOVER is CELL:
        direction = number between 0 and 7 (up down left right diagonals) -- should be an enum
        energyToMoveAdditionalCell = .25
        willMove = true

        moveConnected()
            for (cell in self.getConnectedCells()) {
                cell.willMove = true
            }

        move()
            super.move()
            self.moveConnected()

        every step
            self.move()